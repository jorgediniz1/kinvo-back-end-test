// <auto-generated />
using System;
using Aliquota.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aliquota.Data.Migrations
{
    [DbContext(typeof(AliquotaContext))]
    [Migration("20211014020055_AjustsClient")]
    partial class AjustsClient
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aliquota.Domain.Entidades.Carteira", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<double>("ValorBruto")
                        .HasColumnType("float");

                    b.Property<double>("ValorInvestido")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Carteiras");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereço")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.ComprovanteResgate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarteiraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataResgate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PeriodoInvestimento")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValorDoImposto")
                        .HasColumnType("float");

                    b.Property<double>("ValorResgate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.ToTable("ComprovantesResgates");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.ProdutoFinanceiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarteiraId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataInvestimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TempoInvestido")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValorAplicado")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CarteiraId");

                    b.ToTable("ProdutosFinanceiros");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.Carteira", b =>
                {
                    b.HasOne("Aliquota.Domain.Entidades.Cliente", "Cliente")
                        .WithOne("Carteira")
                        .HasForeignKey("Aliquota.Domain.Entidades.Carteira", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.ComprovanteResgate", b =>
                {
                    b.HasOne("Aliquota.Domain.Entidades.Carteira", "Carteira")
                        .WithMany("ListaComprovanteResgate")
                        .HasForeignKey("CarteiraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carteira");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.ProdutoFinanceiro", b =>
                {
                    b.HasOne("Aliquota.Domain.Entidades.Carteira", null)
                        .WithMany("ProdutoFinanceiro")
                        .HasForeignKey("CarteiraId");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.Carteira", b =>
                {
                    b.Navigation("ListaComprovanteResgate");

                    b.Navigation("ProdutoFinanceiro");
                });

            modelBuilder.Entity("Aliquota.Domain.Entidades.Cliente", b =>
                {
                    b.Navigation("Carteira");
                });
#pragma warning restore 612, 618
        }
    }
}
